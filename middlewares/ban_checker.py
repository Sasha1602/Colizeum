from aiogram import BaseMiddleware
from aiogram.types import Message, CallbackQuery
from typing import Callable, Dict, Any, Union
from database import is_user_banned  # –∏–ª–∏ –æ—Ç–∫—É–¥–∞ —É —Ç–µ–±—è –∏–º–ø–æ—Ä—Ç

class BanCheckMiddleware(BaseMiddleware):
    async def __call__(
        self,
        handler: Callable[[Union[Message, CallbackQuery], Dict[str, Any]], Any],
        event: Union[Message, CallbackQuery],
        data: Dict[str, Any]
    ) -> Any:
        user_id = event.from_user.id
        banned = await is_user_banned(user_id)
        print(banned)
        if banned:
            if isinstance(event, CallbackQuery):
                await event.answer("üö´ –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.", show_alert=True)
            elif isinstance(event, Message):
                await event.answer("üö´ –í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
            return None  # ‚õîÔ∏è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û: –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–ø–æ—á–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        # –ï—Å–ª–∏ –Ω–µ –∑–∞–±–∞–Ω–µ–Ω ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        return await handler(event, data)